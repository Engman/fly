cbuffer blurCB
{	
	float textureHeight;
	float textureWidth;
	float blurFactor;
	float padd;
};

Texture2D gNormal_Depth_SRV : register(t0);
Texture2D GlowSRV 			: register(t1);

SamplerState SampleTypeClamp 	:	 register(s0);



//-----------------------------------------------------------------------------------------
// Input and Output Structures
//-----------------------------------------------------------------------------------------

struct PSIn
{
	float4 Pos			: SV_Position;
	float4 ScreenPos	: Position;
	float2 TextCoord  	: TEXCOORD; 
};

//-----------------------------------------------------------------------------------------
// PixelShader: PSSceneMain
//-----------------------------------------------------------------------------------------
float4 FPixelShader(PSIn input) :  SV_Target
{	
	float PixOffset[5] = {0.0,1.0,2.0,3.0,4.0};
	float Weight[5] = {0.2270270270, 0.1945945946, 0.1216216216, 0.0540540541, 0.0162162162 };
	

	float dx = 1.0f / textureWidth;
    float4 sum =  GlowSRV.Sample(SampleTypeClamp, input.TextCoord) * Weight[0];
	float4 centerNormalDepth = gNormal_Depth_SRV.Sample(SampleTypeClamp, input.TextCoord);

	float4 neighborNormalDepth;
	float totalWeight = Weight[0];
	float scale = blurFactor * centerNormalDepth.z; //I want the scale to decay with the depht * 	(centerNormalDepth.w );
		
    for( int i = 1; i < 5; i++ )
    {
		sum += GlowSRV.Sample(SampleTypeClamp,  input.TextCoord  + float2(PixOffset[i], 0.0) * scale * dx ) * Weight[i];
		sum += GlowSRV.Sample(SampleTypeClamp,  input.TextCoord - float2(PixOffset[i], 0.0) * scale * dx ) * Weight[i];

    }
	
    /*for( int i = 1; i < 5; i++ )
    {
		neighborNormalDepth = gNormal_Depth_SRV.Sample(SampleTypeClamp, input.TextCoord  + float2(PixOffset[i], 0.0) * scale * dx );
		if(dot(neighborNormalDepth.xyz, centerNormalDepth.xyz) >= 0.8f &&
			abs(neighborNormalDepth.w - centerNormalDepth.w) <= 0.2f)
		{
			sum += GlowSRV.Sample(SampleTypeClamp,  input.TextCoord  + float2(PixOffset[i], 0.0) * scale * dx ) * Weight[i];
			totalWeight += Weight[i];
		}
		neighborNormalDepth = gNormal_Depth_SRV.Sample(SampleTypeClamp, input.TextCoord  - float2(PixOffset[i], 0.0) * scale * dx );
		
		if(dot(neighborNormalDepth.xyz, centerNormalDepth.xyz) >= 0.8f &&
			abs(neighborNormalDepth.w - centerNormalDepth.w) <= 0.2f)
		{
			sum += GlowSRV.Sample(SampleTypeClamp,  input.TextCoord - float2(PixOffset[i], 0.0) * scale * dx ) * Weight[i];
			totalWeight += Weight[i];
		}
    }*/
    return sum; // totalWeight;
  
}

